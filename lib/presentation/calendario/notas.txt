import 'package:flutter/material.dart';
import 'package:table_calendar/table_calendar.dart';
import 'detalle_citas_page.dart';

class CalendarioPage extends StatefulWidget {
  const CalendarioPage({super.key});

  @override
  State<CalendarioPage> createState() => _CalendarioPageState();
}

class _CalendarioPageState extends State<CalendarioPage>
    with SingleTickerProviderStateMixin {
  DateTime _focusedDay = DateTime.now();
  DateTime? _selectedDay;
  bool _showPanel = false;
  final TextEditingController _eventController = TextEditingController();
  Map<DateTime, List<String>> _events = {};

  void _addEvent() {
    if (_selectedDay != null && _eventController.text.trim().isNotEmpty) {
      setState(() {
        _events[_selectedDay!] = [
          ...?_events[_selectedDay],
          _eventController.text.trim(),
        ];
        _eventController.clear();
        _showPanel = false;
      });
    }
  }

  List<String> _getEventsForDay(DateTime day) {
    return _events[DateTime(day.year, day.month, day.day)] ?? [];
  }

  @override
  Widget build(BuildContext context) {
    return Row(
      children: [
        /// Lado izquierdo: calendario + lista de eventos
        Expanded(
          flex: 1,
          child: Column(
            children: [
              TableCalendar(
                focusedDay: _focusedDay,
                firstDay: DateTime.utc(2020, 1, 1),
                lastDay: DateTime.utc(2030, 12, 31),
                selectedDayPredicate: (day) => isSameDay(_selectedDay, day),
                onDaySelected: (selectedDay, focusedDay) {
                  setState(() {
                    _selectedDay = selectedDay;
                    _focusedDay = focusedDay;
                  });
                },
                onPageChanged: (focusedDay) {
                  _focusedDay = focusedDay;
                },
                calendarBuilders: CalendarBuilders(
                  defaultBuilder: (context, day, _) {
                    return GestureDetector(
                      onSecondaryTapDown: (_) {
                        setState(() {
                          _selectedDay = day;
                          _showPanel = true;
                        });
                      },
                      child: Center(child: Text("${day.day}")),
                    );
                  },
                  selectedBuilder: (context, day, _) {
                    return GestureDetector(
                      onSecondaryTapDown: (_) {
                        setState(() {
                          _selectedDay = day;
                          _showPanel = true;
                        });
                      },
                      child: Container(
                        decoration: BoxDecoration(
                          color: Colors.blue,
                          shape: BoxShape.circle,
                        ),
                        alignment: Alignment.center,
                        child: Text(
                          "${day.day}",
                          style: const TextStyle(color: Colors.white),
                        ),
                      ),
                    );
                  },
                ),
              ),

              /// Lista de eventos debajo
              Expanded(
                flex: 3,
                child: Container(
                  width: double.infinity,
                  color: Colors.grey[200],
                  padding: const EdgeInsets.all(8),
                  child:
                      _selectedDay == null
                          ? const Center(child: Text("Selecciona un dÃ­a"))
                          : ListView(
                            children:
                                _getEventsForDay(_selectedDay!).map((e) {
                                  return ListTile(
                                    title: Text(e),
                                    trailing: IconButton(
                                      icon: const Icon(Icons.delete),
                                      onPressed: () {
                                        setState(() {
                                          _events[_selectedDay!]!.removeWhere(
                                            (ev) => ev == e,
                                          );
                                        });
                                      },
                                    ),
                                  );
                                }).toList(),
                          ),
                ),
              ),
            ],
          ),
        ),

        /// Panel derecho (aparece solo en click derecho)
        if (_showPanel)
          Container(
            width: 250,
            color: Colors.white,
            padding: const EdgeInsets.all(8),
            child: Column(
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                const Text(
                  "Agregar evento",
                  style: TextStyle(fontSize: 16, fontWeight: FontWeight.bold),
                ),
                const SizedBox(height: 10),
                TextFormField(
                  controller: _eventController,
                  decoration: const InputDecoration(
                    labelText: "Nombre del evento",
                    border: OutlineInputBorder(),
                  ),
                ),
                const SizedBox(height: 10),
                ElevatedButton(
                  onPressed: _addEvent,
                  child: const Text("Guardar"),
                ),
                TextButton(
                  onPressed: () => setState(() => _showPanel = false),
                  child: const Text("Cancelar"),
                ),
              ],
            ),
          ),
      ],
    );
  }
}
